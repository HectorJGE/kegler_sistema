"""
Django settings for sistema project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

from django.contrib import messages
from django.utils.translation import ugettext_lazy as _

import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from dotenv import load_dotenv
# Descomentar esta parte para usar el debugger del pycharm con el archivo .env con virtualenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get("DEBUG_DJANGO", default=0))

if DEBUG == 0:
    sentry_sdk.init(
        dsn="https://a41db2a38641433086bc48a046223f78@o289544.ingest.sentry.io/5838113",
        integrations=[DjangoIntegration()],

        # Set traces_sample_rate to 1.0 to capture 100%
        # of transactions for performance monitoring.
        # We recommend adjusting this value in production,
        traces_sample_rate=1.0,

        # If you wish to associate users to errors (assuming you are using
        # django.contrib.auth) you may enable sending PII data.
        send_default_pii=True,

        # By default the SDK will try to use the SENTRY_RELEASE
        # environment variable, or infer a git commit
        # SHA as release, however you may want to set
        # something more human-readable.
        # release="myapp@1.0.0",
    )

ADMINS = [('Raúl Burró', 'rauleburro@bellbird.com.py'), ('Franco Albertini', 'franco.albertini@bellbird.com.py'),]

ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    # Third party libraries
    'crispy_forms',
    'notifications',
    'softdelete',
    'auditlog',
    'colorfield',
    'import_export',
    'easy_pdf',
    'reportbro',
    'datatableview',
    'ckeditor',
    'post_office',

    # myapps
    'base',
    'clinic',
    'scheduling',
    'consultation',
    'invoicing',
    'reports',
    'stock',
    'sales'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'auditlog.middleware.AuditlogMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'sistema.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates"],
        # 'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'loaders': (
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ),
        },
    },
]

WSGI_APPLICATION = 'sistema.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.environ.get('SQL_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': os.environ.get('SQL_DATABASE', os.path.join(BASE_DIR, 'db.sqlite3')),
        'USER': os.environ.get('SQL_USER', 'user'),
        'PASSWORD': os.environ.get('SQL_PASSWORD', 'password'),
        'HOST': os.environ.get('SQL_HOST', 'localhost'),
        'PORT': os.environ.get('SQL_PORT', '5432'),
        'TEST': {
          'NAME': 'testdatabase',
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'es'

LANGUAGES = (
    ('en-us', _('English')),
    ('es-ar', _('Spanish')),
)

TIME_ZONE = 'America/Asuncion'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/staticfiles/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# STATICFILES_FINDERS = (
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'django.contrib.staticfiles.finders.FileSystemFinder',
# )
SITE_ROOT = os.path.dirname(os.path.realpath(__file__))
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'staticfiles/'),
# )

LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = 'dashboard'
LOGOUT_REDIRECT_URL = 'login'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGO_URL = "/base/img/iribas-logo.png"

CRISPY_TEMPLATE_PACK = 'bootstrap4'

DECIMAL_SEPARATOR = ','
THOUSAND_SEPARATOR = '.'

LOCALE_PATHS = [
    os.path.join(BASE_DIR, "base/locale/"),
    os.path.join(BASE_DIR, "clinic/locale/"),
    os.path.join(BASE_DIR, "scheduling/locale/"),
    os.path.join(BASE_DIR, "consultation/locale/"),
    os.path.join(BASE_DIR, "invoicing/locale/"),
    os.path.join(BASE_DIR, "reports/locale/"),
    os.path.join(BASE_DIR, "stock/locale/"),
    os.path.join(BASE_DIR, "sales/locale/"),
]

FIXTURE_DIRS = [
    os.path.join(BASE_DIR, "fixtures/"),
    os.path.join(BASE_DIR, "base/fixtures/"),
    os.path.join(BASE_DIR, "clinic/fixtures/"),
    os.path.join(BASE_DIR, "scheduling/fixtures/"),
    os.path.join(BASE_DIR, "consultation/fixtures/"),
    os.path.join(BASE_DIR, "invoicing/fixtures/"),
    os.path.join(BASE_DIR, "reports/fixtures/"),
    os.path.join(BASE_DIR, "stock/fixtures/"),
    os.path.join(BASE_DIR, "sales/fixtures/"),
]

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'moono',
        # 'skin': 'office2013',
        'toolbar_Basic': [
            ['Source', '-', 'Bold', 'Italic']
        ],
        'toolbar_YourCustomToolbarConfig': [
            {'name': 'document', 'items': ['Source', '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates']},
            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            {'name': 'editing', 'items': ['Find', 'Replace', '-', 'SelectAll']},
            # {'name': 'forms',
            # 'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
            #           'HiddenField']
            # },
            '/',
            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                       'Language']},
            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            # {'name': 'insert',
            # 'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            # '/',
            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            {'name': 'tools', 'items': ['Maximize', 'ShowBlocks']},
            {'name': 'about', 'items': ['About']},
            '/',  # put this to force next toolbar on new line
            {'name': 'yourcustomtools', 'items': [
                # put the name of your editor.ui.addButton here
                'Preview',
                'Maximize',

            ]},
        ],
        'toolbar': 'YourCustomToolbarConfig',  # put selected toolbar config here
        # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        # 'height': 291,
        # 'width': '100%',
        # 'filebrowserWindowHeight': 725,
        # 'filebrowserWindowWidth': 940,
        # 'toolbarCanCollapse': True,
        # 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage',  # the upload image feature
            # your extra plugins here
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            # 'devtools',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    }
}

# SIFEN
SIFEN_MIDDLEWARE_URL = os.environ.get('SIFEN_MIDDLEWARE_URL', 'localhost:3000/api/v1')
SIFEN_MIDDLEWARE_GENERATE_INVOICE_URL = SIFEN_MIDDLEWARE_URL + '/generar_factura'
SIFEN_MIDDLEWARE_GENERATE_INVOICE_BATCH_URL = SIFEN_MIDDLEWARE_URL + '/generar_factura_async'
SIFEN_MIDDLEWARE_VALIDATE_RUC_URL = SIFEN_MIDDLEWARE_URL + '/consultar_ruc'
SIFEN_MIDDLEWARE_REQUEST_INVOICE_URL = SIFEN_MIDDLEWARE_URL + '/consultar_factura'
SIFEN_MIDDLEWARE_GENERATE_INVOICE_PDF_URL = SIFEN_MIDDLEWARE_URL + '/generar_kude_pdf'
SIFEN_MIDDLEWARE_GENERATE_INVOICE_HTML_URL = SIFEN_MIDDLEWARE_URL + '/generar_kude_html_texto'
SIFEN_MIDDLEWARE_REQUEST_INVOICE_BATCH_URL = SIFEN_MIDDLEWARE_URL + '/consultar_lote_factura'


# CLIENT PARAMS
SIFEN_LOGO = os.environ.get('SIFEN_LOGO', '')
SIFEN_PASSWORD = os.environ.get('SIFEN_PASSWORD', '')
SIFEN_ID_CSC = os.environ.get('SIFEN_ID_CSC', '')
SIFEN_CSC = os.environ.get('SIFEN_CSC', '')

# PARAMS
SIFEN_DIGITAL_SIGNATURE_DATE = os.environ.get('SIFEN_DIGITAL_SIGNATURE_DATE', '')
SIFEN_RUC = os.environ.get('SIFEN_RUC', '')
SIFEN_BUSINESS_NAME = os.environ.get('SIFEN_BUSINESS_NAME', '')
SIFEN_FANTASY_NAME = os.environ.get('SIFEN_FANTASY_NAME', '')
# PARAMS - ECONOMIC ACTIVITY
SIFEN_ECONOMIC_ACTIVITY_CODE = os.environ.get('SIFEN_ECONOMIC_ACTIVITY_CODE', '')
SIFEN_ECONOMIC_ACTIVITY_DESCRIPTION = os.environ.get('SIFEN_ECONOMIC_ACTIVITY_DESCRIPTION', '')
SIFEN_STAMP_NUMBER = os.environ.get('SIFEN_STAMP_NUMBER', '')
SIFEN_STAMP_DATE = os.environ.get('SIFEN_STAMP_DATE', '')
# PARAMS - ESTABLISHMENT
SIFEN_ESTABLISHMENT_CODE = os.environ.get('SIFEN_ESTABLISHMENT_CODE', '')
SIFEN_ESTABLISHMENT_DIRECTION = os.environ.get('SIFEN_ESTABLISHMENT_DIRECTION', '')
SIFEN_ESTABLISHMENT_HOUSE_NUMBER = os.environ.get('SIFEN_ESTABLISHMENT_HOUSE_NUMBER', '')
SIFEN_ESTABLISHMENT_STREET_NAME_1 = os.environ.get('SIFEN_ESTABLISHMENT_STREET_NAME_1', '')
SIFEN_ESTABLISHMENT_STREET_NAME_2 = os.environ.get('SIFEN_ESTABLISHMENT_STREET_NAME_2', '')
SIFEN_ESTABLISHMENT_DEPARTMENT_CODE = os.environ.get('SIFEN_ESTABLISHMENT_DEPARTMENT_CODE', '')
SIFEN_ESTABLISHMENT_DEPARTMENT_DESCRIPTION = os.environ.get('SIFEN_ESTABLISHMENT_DEPARTMENT_DESCRIPTION', '')
SIFEN_ESTABLISHMENT_DISTRICT_CODE = os.environ.get('SIFEN_ESTABLISHMENT_DISTRICT_CODE', '')
SIFEN_ESTABLISHMENT_DISTRICT_DESCRIPTION = os.environ.get('SIFEN_ESTABLISHMENT_DISTRICT_DESCRIPTION', '')
SIFEN_ESTABLISHMENT_CITY_CODE = os.environ.get('SIFEN_ESTABLISHMENT_CITY_CODE', '')
SIFEN_ESTABLISHMENT_CITY_DESCRIPTION = os.environ.get('SIFEN_ESTABLISHMENT_CITY_DESCRIPTION', '')
SIFEN_ESTABLISHMENT_PHONE = os.environ.get('SIFEN_ESTABLISHMENT_PHONE', '')
SIFEN_ESTABLISHMENT_EMAIL = os.environ.get('SIFEN_ESTABLISHMENT_EMAIL', '')
SIFEN_ESTABLISHMENT_DENOMINATION = os.environ.get('SIFEN_ESTABLISHMENT_DENOMINATION', '')

EMAIL_HOST = os.environ.get('EMAIL_HOST', '')
EMAIL_PORT = os.environ.get('EMAIL_PORT', '')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', '')
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS', '')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL', '')

try:
    from sistema.local_settings import *
except ImportError:
    pass
